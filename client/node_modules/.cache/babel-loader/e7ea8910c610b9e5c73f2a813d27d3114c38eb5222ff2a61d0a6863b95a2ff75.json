{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolca\\\\TransLate\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Container, Stack } from \"react-bootstrap\";\nimport AddCard from \"./components/AddCards\";\nimport ShowWords from \"./components/ShowWords\";\nimport ShowPair from \"./components/ShowPair\";\nimport NewCard from \"./components/NewCard\";\nimport { useCards } from './contexts/CardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [isShow, setIsShow] = useState(false);\n  const [isShowWord, setIsShowWord] = useState(false);\n  const [isShowPair, setIsShowPair] = useState(false);\n  const [vievWordCardId, setViewWordCardId] = useState();\n  const {\n    cards\n  } = useCards();\n  function onShowWords(cardId) {\n    setIsShowWord(true);\n    setViewWordCardId(cardId);\n  }\n  function onShowPair(cardId) {\n    setIsShowPair(true);\n    setViewWordCardId(cardId);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"App my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: \"2\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"me-auto\",\n          children: \"CardWord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setIsShow(true),\n          children: \" Add New Card \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(300px,1fr))\",\n          gap: \"1rem\",\n          alignItems: \"flex-start\"\n        },\n        children: cards === null || cards === void 0 ? void 0 : cards.map(card => {\n          return /*#__PURE__*/_jsxDEV(NewCard, {\n            id: card._id,\n            name: card.name,\n            description: card.desc,\n            onShowWords: onShowWords,\n            onShowPair: onShowPair\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCard, {\n      show: isShow,\n      handleClose: () => setIsShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowWords, {\n      show: isShowWord,\n      cardId: vievWordCardId,\n      handleClose: () => setIsShowWord(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowPair, {\n      show: isShowPair,\n      cardId: vievWordCardId,\n      handleClose: () => setIsShowPair(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"C1tAk1nkySPAr6lxMmMf7Xeq+Ng=\", false, function () {\n  return [useCards];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Button","Container","Stack","AddCard","ShowWords","ShowPair","NewCard","useCards","App","isShow","setIsShow","isShowWord","setIsShowWord","isShowPair","setIsShowPair","vievWordCardId","setViewWordCardId","cards","onShowWords","cardId","onShowPair","display","gridTemplateColumns","gap","alignItems","map","card","_id","name","desc"],"sources":["C:/Users/kolca/TransLate/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Container, Stack } from \"react-bootstrap\";\nimport AddCard from \"./components/AddCards\";\nimport ShowWords from \"./components/ShowWords\";\nimport ShowPair from \"./components/ShowPair\";\nimport NewCard from \"./components/NewCard\";\nimport { useCards } from './contexts/CardContext'\n\n\nexport default function App() {\n  const [isShow, setIsShow] = useState(false)\n  const [isShowWord, setIsShowWord] = useState(false)\n  const [isShowPair, setIsShowPair] = useState(false)\n\n\n  const [vievWordCardId, setViewWordCardId] = useState()\n  const { cards } = useCards()\n\n\n  function onShowWords(cardId) {\n    setIsShowWord(true)\n    setViewWordCardId(cardId)\n  }\n\n\n  function onShowPair(cardId) {\n    setIsShowPair(true)\n    setViewWordCardId(cardId)\n  }\n\n  return (\n    <>\n\n      <Container className=\"App my-4\">\n\n        <Stack direction=\"horizontal\" gap=\"2\" className=\"mb-3\">\n          <h1 className=\"me-auto\">CardWord</h1>\n          <Button variant=\"primary\" onClick={() => setIsShow(true)}> Add New Card </Button>\n        </Stack>\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fill, minmax(300px,1fr))\", gap: \"1rem\", alignItems: \"flex-start\" }}>\n          {cards?.map(card => {\n            return (\n              < NewCard\n                id={card._id}\n                name={card.name}\n                description={card.desc}\n                onShowWords={onShowWords}\n                onShowPair={onShowPair}\n              />)\n          })\n\n          }\n        </div>\n      </Container>\n\n      <AddCard\n        show={isShow}\n        handleClose={() => setIsShow(false)} />\n\n      <ShowWords\n        show={isShowWord}\n        cardId={vievWordCardId}\n        handleClose={() => setIsShowWord(false)}\n      />\n\n      <ShowPair\n        show={isShowPair}\n        cardId={vievWordCardId}\n        handleClose={() => setIsShowPair(false)}\n      />\n\n\n\n    </>\n\n  );\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,QAAQ,iBAAiB;AAC1D,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,QAAQ,QAAQ,wBAAwB;AAAA;AAAA;AAGjD,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAGnD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,EAAE;EACtD,MAAM;IAAEkB;EAAM,CAAC,GAAGV,QAAQ,EAAE;EAG5B,SAASW,WAAW,CAACC,MAAM,EAAE;IAC3BP,aAAa,CAAC,IAAI,CAAC;IACnBI,iBAAiB,CAACG,MAAM,CAAC;EAC3B;EAGA,SAASC,UAAU,CAACD,MAAM,EAAE;IAC1BL,aAAa,CAAC,IAAI,CAAC;IACnBE,iBAAiB,CAACG,MAAM,CAAC;EAC3B;EAEA,oBACE;IAAA,wBAEE,QAAC,SAAS;MAAC,SAAS,EAAC,UAAU;MAAA,wBAE7B,QAAC,KAAK;QAAC,SAAS,EAAC,YAAY;QAAC,GAAG,EAAC,GAAG;QAAC,SAAS,EAAC,MAAM;QAAA,wBACpD;UAAI,SAAS,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACrC,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,OAAO,EAAE,MAAMT,SAAS,CAAC,IAAI,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3E,eACR;QAAK,KAAK,EAAE;UAAEW,OAAO,EAAE,MAAM;UAAEC,mBAAmB,EAAE,sCAAsC;UAAEC,GAAG,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAa,CAAE;QAAA,UACjIP,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEQ,GAAG,CAACC,IAAI,IAAI;UAClB,oBACE,QAAE,OAAO;YACP,EAAE,EAAEA,IAAI,CAACC,GAAI;YACb,IAAI,EAAED,IAAI,CAACE,IAAK;YAChB,WAAW,EAAEF,IAAI,CAACG,IAAK;YACvB,WAAW,EAAEX,WAAY;YACzB,UAAU,EAAEE;UAAW;YAAA;YAAA;YAAA;UAAA,QACvB;QACN,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAGE;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eAEZ,QAAC,OAAO;MACN,IAAI,EAAEX,MAAO;MACb,WAAW,EAAE,MAAMC,SAAS,CAAC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAEzC,QAAC,SAAS;MACR,IAAI,EAAEC,UAAW;MACjB,MAAM,EAAEI,cAAe;MACvB,WAAW,EAAE,MAAMH,aAAa,CAAC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACxC,eAEF,QAAC,QAAQ;MACP,IAAI,EAAEC,UAAW;MACjB,MAAM,EAAEE,cAAe;MACvB,WAAW,EAAE,MAAMD,aAAa,CAAC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA,gBAID;AAGP;AAAC,GAnEuBN,GAAG;EAAA,QAOPD,QAAQ;AAAA;AAAA,KAPJC,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}